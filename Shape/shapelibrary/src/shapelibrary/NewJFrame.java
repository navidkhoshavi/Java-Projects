/*
 * NewJFrame.java
 *
 * Created on July 15, 2008, 7:22 PM
 */

package shapelibrary;

import java.awt.Color;
import java.awt.image.BufferedImage;
import javax.swing.ButtonModel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;

/**
 *
 * @author  ebi
 */
public class NewJFrame extends javax.swing.JFrame {
    
    /** Creates new form NewJFrame */
    public NewJFrame() {
        initComponents();
        buttonGroup1.add(rbnEllips);
        buttonGroup1.add(rbnRectangle);
        buttonGroup1.add(rbnTringle);
        buttonGroup1.setSelected(rbnRectangle.getModel(),true);
        grpButtonAxis.add(rbnX);
        grpButtonAxis.add(rbnY);
        grpButtonAxis.add(rbnZ);
        grpButtonAxis.setSelected(rbnZ.getModel(),true);
        
        myTimer.start();
        
       //jpnlMypanel.setVisible(true);
        
        //jpnlMypanel.setEnabled(true);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        buttonGroup1 = new javax.swing.ButtonGroup();
        grpButtonAxis = new javax.swing.ButtonGroup();
        chooseColor = new javax.swing.JColorChooser();
        lblChooseShape = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        rbnRectangle = new javax.swing.JRadioButton();
        rbnEllips = new javax.swing.JRadioButton();
        rbnTringle = new javax.swing.JRadioButton();
        cBoxBlinking = new javax.swing.JCheckBox();
        cBoxShifting = new javax.swing.JCheckBox();
        cBoxRotating = new javax.swing.JCheckBox();
        lblAxis = new javax.swing.JLabel();
        rbnX = new javax.swing.JRadioButton();
        rbnY = new javax.swing.JRadioButton();
        rbnZ = new javax.swing.JRadioButton();
        jpnlMypanel = new MyPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblChooseShape.setText("Base shape:");

        jLabel2.setText("Base shape:");

        rbnRectangle.setText("Rectangle");
        rbnRectangle.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rbnRectangle.setMargin(new java.awt.Insets(0, 0, 0, 0));

        rbnEllips.setText("Ellips");
        rbnEllips.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rbnEllips.setMargin(new java.awt.Insets(0, 0, 0, 0));

        rbnTringle.setText("Tringle");
        rbnTringle.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rbnTringle.setMargin(new java.awt.Insets(0, 0, 0, 0));

        cBoxBlinking.setText("Blinking");
        cBoxBlinking.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        cBoxBlinking.setMargin(new java.awt.Insets(0, 0, 0, 0));

        cBoxShifting.setText("Shifting");
        cBoxShifting.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        cBoxShifting.setMargin(new java.awt.Insets(0, 0, 0, 0));

        cBoxRotating.setText("Rotating");
        cBoxRotating.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        cBoxRotating.setMargin(new java.awt.Insets(0, 0, 0, 0));

        lblAxis.setText("about Axis :");

        rbnX.setText("X");
        rbnX.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rbnX.setMargin(new java.awt.Insets(0, 0, 0, 0));

        rbnY.setText("Y");
        rbnY.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rbnY.setMargin(new java.awt.Insets(0, 0, 0, 0));

        rbnZ.setText("Z");
        rbnZ.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rbnZ.setMargin(new java.awt.Insets(0, 0, 0, 0));

        jpnlMypanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jpnlMypanelMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jpnlMypanelMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jpnlMypanelMouseReleased(evt);
            }
			public void mouseDragged(java.awt.event.MouseEvent evt) {
                jpnlMypanelMouseDragged(evt);
            }
        });
        jpnlMypanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jpnlMypanelMouseMoved(evt);
            }
        });
		
		jpnlMypanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jpnlMypanelMouseDragged(evt);
            }
        });
		
		int delay = 10; //milliseconds
        ActionListener taskPerformer = new ActionListener() {
           public void actionPerformed(ActionEvent evt) {
              timerFormPick(evt);
           }
       };
       myTimer = new Timer(delay, taskPerformer);

        javax.swing.GroupLayout jpnlMypanelLayout = new javax.swing.GroupLayout(jpnlMypanel);
        jpnlMypanel.setLayout(jpnlMypanelLayout);
        jpnlMypanelLayout.setHorizontalGroup(
            jpnlMypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 805, Short.MAX_VALUE)
        );
        jpnlMypanelLayout.setVerticalGroup(
            jpnlMypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 245, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(chooseColor, javax.swing.GroupLayout.DEFAULT_SIZE, 795, Short.MAX_VALUE)
                .addGap(10, 10, 10))
            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addComponent(cBoxBlinking)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblChooseShape, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cBoxShifting))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cBoxRotating)
                        .addGap(14, 14, 14)
                        .addComponent(lblAxis))
                    .addComponent(rbnRectangle))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbnX)
                    .addComponent(rbnEllips))
                .addGap(28, 28, 28)
                .addComponent(rbnY)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbnZ)
                    .addComponent(rbnTringle))
                .addContainerGap(182, Short.MAX_VALUE))
            .addComponent(jpnlMypanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chooseColor, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbnEllips)
                    .addComponent(lblChooseShape, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rbnTringle)
                    .addComponent(rbnRectangle))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cBoxBlinking)
                    .addComponent(cBoxShifting)
                    .addComponent(cBoxRotating)
                    .addComponent(lblAxis)
                    .addComponent(rbnZ)
                    .addComponent(rbnX)
                    .addComponent(rbnY))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpnlMypanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jpnlMypanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpnlMypanelMouseClicked

    }//GEN-LAST:event_jpnlMypanelMouseClicked

    private void jpnlMypanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpnlMypanelMousePressed
        //jpnlMypanel.temp = new MyPoint(evt.getX() , evt.getY());
        //myTimer.stop();
        //jpnlMypanel.setVisible(false);
        //jpnlMypanel.isPressed = true;
    }//GEN-LAST:event_jpnlMypanelMousePressed

    private void jpnlMypanelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpnlMypanelMouseReleased
        //myTimer.start();
    }//GEN-LAST:event_jpnlMypanelMouseReleased

    private void jpnlMypanelMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpnlMypanelMouseMoved
        
    }//GEN-LAST:event_jpnlMypanelMouseMoved
	
	private void jpnlMypanelMouseDragged(java.awt.event.MouseEvent evt) {
            
            //MyPoint p =new MyPoint(evt.getX() , evt.getY());
        
            //p.setXY( (p.getX()+jpnlMypanel.temp.getX())/2 , (p.getY()+jpnlMypanel.temp.getY())/2);
            //jpnlMypanel.rect = new Rectangle(Math.abs(jpnlMypanel.temp.getY() - evt.getY()) ,Math.abs(jpnlMypanel.temp.getX() - evt.getX()),
                //p ,Color.BLUE);
            /*else{
                jpnlMypanel.rect.setCenter(p);
                jpnlMypanel.rect.setHeight(Math.abs(jpnlMypanel.temp.getY() - evt.getY()));
                jpnlMypanel.rect.setWidth(Math.abs(jpnlMypanel.temp.getX() - evt.getX()));
            }*/
            
            /*jpnlMypanel.rect = new Rectangle(Math.abs(jpnlMypanel.temp.getY() - evt.getY()) ,Math.abs(jpnlMypanel.temp.getX() - evt.getX()),
                p ,Color.BLUE);*/
        
            //jpnlMypanel.repaint();
	}
	
	//*********************************************************
    private void timerFormPick(ActionEvent evt)
    {
        jpnlMypanel.rot.updateState(evt.getWhen());
        jpnlMypanel.repaint();
        /*if(jpnlMypanel.rect2 != null)
        {   
            jpnlMypanel.elp.rotate(-evt.getWhen(),'z');
            
            jpnlMypanel.elp.shiftShape(evt.getWhen());
            
            jpnlMypanel.tri.rotate(evt.getWhen(),'z');
            
            jpnlMypanel.tri.shiftShape(evt.getWhen());
            
            jpnlMypanel.rect2.shiftShape(evt.getWhen());
            
            //jpnlMypanel.rect2.rotate(evt.getWhen(),'z');
            
            if(jpnlMypanel.rect != null){
                jpnlMypanel.rect.rotate(evt.getWhen(),'z');
                jpnlMypanel.rect.shiftShape(evt.getWhen());
            }
            jpnlMypanel.repaint();
        }*/
    }
	//*********************************************************
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox cBoxBlinking;
    private javax.swing.JCheckBox cBoxRotating;
    private javax.swing.JCheckBox cBoxShifting;
    private javax.swing.JColorChooser chooseColor;
    private javax.swing.ButtonGroup grpButtonAxis;
    private javax.swing.JLabel jLabel2;
    private MyPanel jpnlMypanel;
    private javax.swing.JLabel lblAxis;
    private javax.swing.JLabel lblChooseShape;
    private javax.swing.JRadioButton rbnEllips;
    private javax.swing.JRadioButton rbnRectangle;
    private javax.swing.JRadioButton rbnTringle;
    private javax.swing.JRadioButton rbnX;
    private javax.swing.JRadioButton rbnY;
    private javax.swing.JRadioButton rbnZ;
	private Timer myTimer;
    // End of variables declaration//GEN-END:variables

}
